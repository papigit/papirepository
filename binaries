---
  - name: Check if aws is already installed
    shell: which aws
    register: aws_check
    ignore_errors: true
    become: true

  - name: Check to see if pip is already installed.
    command: "pip --version"
    ignore_errors: true
    changed_when: false # read-only task
    #check_mode: no
    register: pip_is_installed
    become: true

  - name: Giving RWX Permissions to tmp dir
    file:
     path: /tmp
     mode: 0775
    become: true

  - name: create directory to store the binaries
    file:
     path: /opt/binaries
     state: directory
     owner: ec2-user
     group: ec2-user
     mode: 0775
     recurse: yes
    become: true

  - name: install zip/unzip, tar, ksh and other required packages
    yum: name={{ item }} state=present
    with_items:
        - zip
        - unzip
        - ksh
        - tar
        - bzip2
        - python-setuptools
        - postgresql-devel
        - gcc
        - python-devel
        - git
    become: true

  - name: Transfer awscli
    copy:
      src: awscli-bundle.zip
      dest: "/tmp/awscli-bundle.zip"
    when: ((aws_check.stdout.find('no aws in') != -1)or(aws_check.stderr.find('no aws in') != -1))

  - name: install awscli
    shell: "cd /tmp;unzip awscli-bundle.zip;sudo ./awscli-bundle/install -i /usr/local/aws -b /usr/local/bin/aws"
    become: true
    when: ((aws_check.stdout.find('no aws in') != -1)or(aws_check.stderr.find('no aws in') != -1))

  - name: Generate script file to download binaries from s3
    template:
     src: s3bucket.j2
     dest: /opt/binaries/s3bucket.sh
     mode: 0755
    become: true

  - name: download pip Binaries
    shell: /bin/bash -c "/opt/binaries/s3bucket.sh pip-9.0.1.tar.gz"
    become: true
    when: pip_is_installed.rc != 0

  - name: Extract archive for pip
    unarchive:
     src: /opt/binaries/{{ pip_file }}
     dest: /opt/binaries
     copy: no
    ignore_errors: yes
    when: pip_is_installed.rc != 0

  - name: Install PiP
    command: /bin/bash -c "python setup.py install" chdir=/opt/binaries/pip-9.0.1
    become: true
    ignore_errors: yes
    when: pip_is_installed.rc != 0

#  - name: download other Binaries
#    shell: /bin/bash -c "/opt/binaries/s3bucket.sh binaries.tgz"
#    become: true
#
#  - name: Extract binaries
#    unarchive:
#     src: /opt/binaries/binaries.tgz
#     dest: /opt/binaries
#     copy: no
#    ignore_errors: yes

  - name: download Boto Binaries
    shell: /bin/bash -c "/opt/binaries/s3bucket.sh {{ boto_file }}"
    become: true

  - name: install boto pkg
    pip:
     name: file:/opt/binaries/{{ boto_file }}
    become: true
    ignore_errors: yes

  - name: download psycopg2 Binaries
    shell: /bin/bash -c "/opt/binaries/s3bucket.sh {{ psycopg2_file }}"
    become: true

  - name: install psycopg2 pkg
    pip:
     name: file:/opt/binaries/{{ psycopg2_file }}
    become: true
    ignore_errors: yes
    
    
    vars:
    access_key: "{{ lookup('env', 'AWS_ACCESS_KEY_ID') }}"
secret_key: "{{ lookup('env', 'AWS_SECRET_ACCESS_KEY') }}"


DEFAULT:
---
install_binaries:
  - "{{ psycopg2_file }}"
  - "{{ setuptools_file }}"
  - "{{ dateutils_file }}"
  - "{{ future_file }}"
  - "{{ pycrypto_file }}"
  - "{{ docutils_file }}"
  - "{{ ptyprocess_file }}"
  - "{{ botocore_file }}"
  - "{{ s3transfer_file }}"
  - "{{ futures_file }}"
  - "{{ pexpect_file }}"
  - "{{ boto3_file }}"
  - "{{ jmespath_file }}"
  
  
  
  #/bin/sh
export http_proxy=
export https_proxy=
export NO_PROXY=
#sudo easy_install pip
#pip install awscli --ignore-installed six
aws s3 cp {{ aws_bucket }}/$1 {{ download_location }} --sse aws:kms --sse-kms-key-id {{ kms_key_id }}
chmod -R 777 {{ download_location }}/$1

pip_file: "pip.tar.gz"
pexpect_file: "pexpect-4.0.1.tar.gz"
boto_file: "boto3-1.4.7.tar.gz"
pycrypto_file: "pycrypto-2.6.1.tar.gz"
setuptools_file: "setuptools-36.2.7.zip"
s3transfer_file: "s3transfer-0.1.5.tar.gz"
ptyprocess_file: "ptyprocess-0.5.tar.gz"
future_file: "future-0.16.0.tar.gz"
futures_file: "futures-3.1.1.tar.gz"
dateutils_file: "python-dateutil-2.6.1.tar.gz"
jmespath_file: "jmespath-0.9.3.tar.gz"
docutils_file: "docutils-0.13.1.tar.gz"
botocore_file: "botocore-1.7.47.tar.gz"


base_dir: "jboss"


#------------------------
#s3 Bucket
#-------------------------
aws_bucket: "s3://pbwmcd-inventory"
download_location: "/{{ base_dir }}"













  
- name: download pre-requiste Binaries in location {{ download_location }}
  shell: /bin/bash -c "/{{ base_dir }}/s3bucket.sh common {{ item }}"
  become: true
  with_items:
      - "{{ setuptools_file }}"
      - "{{ pip_file }}"
      - "{{ ptyprocess_file }}"
      - "{{ pexpect_file }}"
      - "{{ future_file }}"
      - "{{ futures_file }}"
      - "{{ dateutils_file }}"
      - "{{ docutils_file }}"
      - "{{ jmespath_file }}"
      - "{{ botocore_file }}"
      - "{{ s3transfer_file }}"
      - "{{ boto_file }}"
      - "{{ pycrypto_file }}"
      - "{{ ora_client_file }}"
      - "{{ jboss_file }}"
      - "{{ jdk8_file }}"	  
- name: download TDS Binaries in location {{ download_location }}
  shell: /bin/bash -c "/{{ base_dir }}/s3bucket.sh tds {{ item }}"
  become: true
  with_items:
      - "{{ deployment_binary_file }}"
      - "{{ db_binary_file }}"
   #   - "{{ prodb_filename }}"
      - "{{ pdbcli_filename }}"
      - "{{ deploy_file }}"

- name: Unarchive setup Tools zip file
  shell: /bin/bash -c "unzip -o /{{ base_dir }}/binaries/setuptools-36.2.7.zip" chdir=/{{ base_dir }}/binaries
  become: true
  ignore_errors: yes

#  unarchive:
#   src: /{{ base_dir }}/binaries/{{ setuptools_file }}
#   dest: /{{ base_dir }}/binaries
#   copy: no
#  become: true

- name: Install setup Tools
  command: /bin/bash -c "python setup.py install" chdir=/{{ base_dir }}/binaries/setuptools-36.2.7
  become: true
  ignore_errors: yes



- name: Unarchive pip tar
  unarchive:
   src: /{{ base_dir }}/binaries/{{ pip_file }}
   dest:  /{{ base_dir }}/binaries
   copy: no
  become: true


#- name: Extract archive for pip
#  command: tar -xvzf /{{ base_dir }}/binaries/{{ pip_file }} chdir="/{{ base_dir }}/binaries"
#  ignore_errors: yes
- name: set permissions to source directory
  file:
   path: "/{{ base_dir }}/binaries"
   recurse: yes
   mode: 0777
  become: true


- name: Install PIP
  command: /bin/bash -c "python setup.py install" chdir=/{{ base_dir }}/binaries/pip-9.0.1
  become: true
  ignore_errors: yes


- name: install ptyprocess
  pip:
   name: file:/{{ base_dir }}/binaries/{{ ptyprocess_file }}
  become: true
  ignore_errors: yes

- name: install pexpect
  pip:
   name: file:/{{ base_dir }}/binaries/{{ pexpect_file }}
  become: true
  ignore_errors: yes

- name: install python-futures pkg
  pip:
   name: file:/{{ base_dir }}/binaries/{{ futures_file }}
  become: true
  ignore_errors: yes

- name: install date-utils pkg
  pip:
   name: file:/{{ base_dir }}/binaries/{{ dateutils_file }}
  become: true
  ignore_errors: yes

- name: install doc-utils pkg
  pip:
   name: file:/{{ base_dir }}/binaries/{{ docutils_file }}
  become: true
  ignore_errors: yes


- name: install jms-utils pkg
  pip:
   name: file:/{{ base_dir }}/binaries/{{ jmespath_file }}
  become: true
  ignore_errors: yes


- name: install boto core  pkg
  pip:
   name: file:/{{ base_dir }}/binaries/{{ botocore_file }}
  become: true
  ignore_errors: yes

- name: install stransfer
  pip:
   name: file:/{{ base_dir }}/binaries/{{ s3transfer_file }}
  become: true
  ignore_errors: yes


- name: install boto3
  pip:
   name: file:/{{ base_dir }}/binaries/{{ boto_file }}
  become: true
  ignore_errors: yes


- name: Execute permissions for python packages
  file:
   path: /usr/lib/python2.7
   mode: 0775
   recurse: yes
  become: true
  #command: chmod -R 755 /usr/lib/python2.7
  #become: true
