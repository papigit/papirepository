
  - name: start postresql_db container
    docker_container:
      name: postgresql_db
      image: postgresql_db
      volumes:
        - ./postgresql/db:/var/lib/postgresql/data
      ports:
        - "5432:5432"
      env:
        DEBUG: "false"
        POSTGRES_USER: "sa"
        POSTGRES_PASS: "passw0rd"
        POSTGRES_DB: "devopsdashboard"
      state: "started"
      restart: "yes"
      networks:
        - name: dodashb_network

  - name: start user-api container
    docker_container:
      name: user-api
      image: user-api
      volumes:
        - ./user-api/logs:/opt/logs
        - ./user-api/app:/opt/target
      ports:
        - "8090:8090"
      links:
        - postgresql_db
      networks:
        - name: dodashb_network
      state: "started"
      restart: "yes"

  - name: start dashboard-api container
    docker_container:
      name: dashboard-api
      image: dashboard-api
      volumes:
        - ./dashboard-api/logs:/opt/logs
        - ./dashboard-api/app:/opt/target
      ports:
        - "8091:8091"
      links:
        - postgresql_db
      networks:
        - name: dodashb_network
      state: "started"
      restart: "yes"

  - name: start user_ui container
    docker_container:
      name: user_ui_webserv
      image: ddb_webserv
      volumes:
        - ./dosetup/dist:/var/www
      ports:
        - "8095 : 80"
      networks:
        - name: dodashb_network
      state: "started"
      restart: "yes"

  - name: run dashboard_ui container
    docker_container:
      name: dashboard_ui
      image: ddb_webserv
      volumes:
        - ./dashboard/dist:/var/www
      ports:
        - "8093 : 80"
      networks:
        - name: dodashb_network
      state: "started"
      restart: "yes"

  - name: start nginx container
    docker_container:
      name: ddb_nginx_webserv
      image: ddb_nginx
      volumes:
        - ./dosetup/dist:/var/www
      ports:
        - "8087 : 80"
      networks:
        - name: dodashb_network
      state: "started"
      restart: "yes"
